/*
 * Simple API
 * A simple API to illustrate OpenAPI concepts
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package hu.haku.gamestore.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Price
 */
@JsonPropertyOrder({
  Price.JSON_PROPERTY_CURRENCY,
  Price.JSON_PROPERTY_NET_PRICE,
  Price.JSON_PROPERTY_GROSS_PRICE,
  Price.JSON_PROPERTY_REGION,
  Price.JSON_PROPERTY_SALE,
  Price.JSON_PROPERTY_ON_SALE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Price {
  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_NET_PRICE = "netPrice";
  private BigDecimal netPrice;

  public static final String JSON_PROPERTY_GROSS_PRICE = "grossPrice";
  private BigDecimal grossPrice;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_SALE = "sale";
  private String sale;

  public static final String JSON_PROPERTY_ON_SALE = "onSale";
  private Boolean onSale;

  public Price() {
  }

  public Price currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Price netPrice(BigDecimal netPrice) {
    
    this.netPrice = netPrice;
    return this;
  }

   /**
   * Get netPrice
   * @return netPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NET_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getNetPrice() {
    return netPrice;
  }


  @JsonProperty(JSON_PROPERTY_NET_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetPrice(BigDecimal netPrice) {
    this.netPrice = netPrice;
  }


  public Price grossPrice(BigDecimal grossPrice) {
    
    this.grossPrice = grossPrice;
    return this;
  }

   /**
   * Get grossPrice
   * @return grossPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GROSS_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGrossPrice() {
    return grossPrice;
  }


  @JsonProperty(JSON_PROPERTY_GROSS_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrossPrice(BigDecimal grossPrice) {
    this.grossPrice = grossPrice;
  }


  public Price region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public Price sale(String sale) {
    
    this.sale = sale;
    return this;
  }

   /**
   * Get sale
   * @return sale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSale() {
    return sale;
  }


  @JsonProperty(JSON_PROPERTY_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSale(String sale) {
    this.sale = sale;
  }


  public Price onSale(Boolean onSale) {
    
    this.onSale = onSale;
    return this;
  }

   /**
   * Get onSale
   * @return onSale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ON_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOnSale() {
    return onSale;
  }


  @JsonProperty(JSON_PROPERTY_ON_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnSale(Boolean onSale) {
    this.onSale = onSale;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Price price = (Price) o;
    return Objects.equals(this.currency, price.currency) &&
        Objects.equals(this.netPrice, price.netPrice) &&
        Objects.equals(this.grossPrice, price.grossPrice) &&
        Objects.equals(this.region, price.region) &&
        Objects.equals(this.sale, price.sale) &&
        Objects.equals(this.onSale, price.onSale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, netPrice, grossPrice, region, sale, onSale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Price {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    netPrice: ").append(toIndentedString(netPrice)).append("\n");
    sb.append("    grossPrice: ").append(toIndentedString(grossPrice)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    sale: ").append(toIndentedString(sale)).append("\n");
    sb.append("    onSale: ").append(toIndentedString(onSale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

