/*
 * Simple API
 * A simple API to illustrate OpenAPI concepts
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package hu.haku.gamestore.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * GameDetail
 */
@JsonPropertyOrder({
  GameDetail.JSON_PROPERTY_REVISION_ID,
  GameDetail.JSON_PROPERTY_GAME,
  GameDetail.JSON_PROPERTY_STATE,
  GameDetail.JSON_PROPERTY_SALE,
  GameDetail.JSON_PROPERTY_AVAILABILITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GameDetail {
  public static final String JSON_PROPERTY_REVISION_ID = "revisionId";
  private String revisionId;

  public static final String JSON_PROPERTY_GAME = "game";
  private Game game;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    ACTIVE("active"),
    
    DEACTIVE("deactive"),
    
    SUSPENDED("suspended");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_SALE = "sale";
  private Object sale;

  public static final String JSON_PROPERTY_AVAILABILITY = "availability";
  private Duration availability;

  public GameDetail() {
  }

  public GameDetail revisionId(String revisionId) {
    
    this.revisionId = revisionId;
    return this;
  }

   /**
   * Get revisionId
   * @return revisionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REVISION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRevisionId() {
    return revisionId;
  }


  @JsonProperty(JSON_PROPERTY_REVISION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionId(String revisionId) {
    this.revisionId = revisionId;
  }


  public GameDetail game(Game game) {
    
    this.game = game;
    return this;
  }

   /**
   * Get game
   * @return game
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Game getGame() {
    return game;
  }


  @JsonProperty(JSON_PROPERTY_GAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGame(Game game) {
    this.game = game;
  }


  public GameDetail state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public GameDetail sale(Object sale) {
    
    this.sale = sale;
    return this;
  }

   /**
   * Get sale
   * @return sale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getSale() {
    return sale;
  }


  @JsonProperty(JSON_PROPERTY_SALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSale(Object sale) {
    this.sale = sale;
  }


  public GameDetail availability(Duration availability) {
    
    this.availability = availability;
    return this;
  }

   /**
   * Get availability
   * @return availability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AVAILABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Duration getAvailability() {
    return availability;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailability(Duration availability) {
    this.availability = availability;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameDetail gameDetail = (GameDetail) o;
    return Objects.equals(this.revisionId, gameDetail.revisionId) &&
        Objects.equals(this.game, gameDetail.game) &&
        Objects.equals(this.state, gameDetail.state) &&
        Objects.equals(this.sale, gameDetail.sale) &&
        Objects.equals(this.availability, gameDetail.availability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(revisionId, game, state, sale, availability);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameDetail {\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    game: ").append(toIndentedString(game)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    sale: ").append(toIndentedString(sale)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

